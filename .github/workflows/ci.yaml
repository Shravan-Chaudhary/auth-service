name: Continous Integration

on:
    pull_request:
        branches:
            - main

    push:
        branches:
            - main

jobs:
    build-and-test:
        name: Build the project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Install dependencies
              run: npm ci
            - name: Run eslint
              run: npm run lint
            - name: Test and coverage
              run: npm run test -- --testTimeout=30000
              env:
                  ENV: ${{secrets.ENV}}
                  DATABASE_HOST: ${{ secrets.DB_HOST }}
                  DATABASE_PORT: ${{ secrets.DB_PORT }}
                  DATABASE_USERNAME: ${{ secrets.DB_USERNAME }}
                  DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DATABASE_NAME: ${{ secrets.DB_NAME }}
                  REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}
                  JWKS_URI: ${{secrets.JWKS_URI}}
                  PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
            - name: Build
              run: npm run build
            - name: Sonar Cloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-and-push-docker:
        name: Build and push docker image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: shravan146/auth-service
            IMAGE_TAG: build-${{ github.run_number }}

        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@v3
            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build Docker image
              run: docker build -t ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} -f docker/prod/Dockerfile .
            - name: Push Docker image to Dockerhub
              run: docker push ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
